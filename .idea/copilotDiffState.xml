<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/js/lib/pattern-diagram.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/js/lib/pattern-diagram.js" />
              <option name="originalContent" value="export default class PatternDiagram {&#10;  /**&#10;   * PatternDiagram constructor&#10;   *&#10;   * @param {number} rows&#10;   * @param {number} cols&#10;   * @param {Array} pattern&#10;   *   The pattern should be an array of arrays, where each inner array represents a row&#10;   *   and each element in the inner array represents a column. Elements that have truthy&#10;   *   values are considered part of the pattern.&#10;   */&#10;  constructor(rows, cols, pattern) {&#10;    this.$element = $('&lt;div&gt;').addClass('pattern-diagram');&#10;    this.rows = rows;&#10;    this.cols = cols;&#10;    this.pattern = pattern;&#10;&#10;    this.render();&#10;  }&#10;&#10;  clear() {&#10;    this.$element.empty();&#10;  }&#10;&#10;  render() {&#10;    this.clear();&#10;    const $table = $('&lt;table&gt;');&#10;    const $tbody = $('&lt;tbody&gt;');&#10;    for (let row = 0; row &lt; this.rows; row += 1) {&#10;      const $tr = $('&lt;tr&gt;');&#10;      for (let col = 0; col &lt; this.cols; col += 1) {&#10;        const $td = $('&lt;td&gt;');&#10;        if (this.pattern[row] &amp;&amp; this.pattern[row][col]) {&#10;          $td.addClass('active');&#10;        }&#10;        $tr.append($td);&#10;      }&#10;      $tbody.append($tr);&#10;    }&#10;    $table.append($tbody);&#10;    this.$element.append($table);&#10;  }&#10;}&#10;" />
              <option name="updatedContent" value="export default class PatternDiagram {&#10;  /**&#10;   * PatternDiagram constructor&#10;   *&#10;   * @param {number} rows&#10;   * @param {number} cols&#10;   * @param {Array} pattern&#10;   *   The pattern should be an array of arrays, where each inner array represents a row&#10;   *   and each element in the inner array represents a column. Elements that have truthy&#10;   *   values are considered part of the pattern.&#10;   */&#10;  constructor(rows, cols, pattern) {&#10;    this.$element = $('&lt;div&gt;').addClass('pattern-diagram');&#10;    this.rows = rows;&#10;    this.cols = cols;&#10;    this.pattern = pattern;&#10;&#10;    this.render();&#10;  }&#10;&#10;  clear() {&#10;    this.$element.empty();&#10;  }&#10;&#10;  render() {&#10;    this.clear();&#10;    const $table = $('&lt;table&gt;');&#10;    const $tbody = $('&lt;tbody&gt;');&#10;    for (let row = 0; row &lt; this.rows; row += 1) {&#10;      const $tr = $('&lt;tr&gt;');&#10;      for (let col = 0; col &lt; this.cols; col += 1) {&#10;        const $td = $('&lt;td&gt;');&#10;        if (this.pattern[row] &amp;&amp; this.pattern[row][col]) {&#10;          $td.addClass('active');&#10;        }&#10;        $tr.append($td);&#10;      }&#10;      $tbody.append($tr);&#10;    }&#10;    $table.append($tbody);&#10;    this.$element.append($table);&#10;  }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>